{"version":3,"sources":["token-logo.png","components/Navbar.js","components/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","target","rel","src","logo","width","height","alt","id","this","props","account","Component","Main","style","paddingTop","scope","window","web3","utils","fromWei","stakingBalance","aceTokenBalance","onSubmit","event","amount","preventDefault","input","value","toString","toWei","stakeTokens","parseFloat","etherBalance","toFixed","type","ref","placeholder","required","fontWeight","fontSize","onClick","unstakeTokens","textAlign","App","alert","setState","loading","state","tokenFarm","methods","recieveEther","send","from","ethereum","selectedAddress","on","hash","sendEther","aceToken","a","loadWeb3","loadBlockchainData","Web3","request","method","currentProvider","eth","net","getId","networkId","aceTokenData","AceToken","networks","Contract","abi","address","balanceOf","call","tokenFarmData","TokenFarm","getBalance","content","role","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc83992c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/token-logo.279da100.png\";","import React, { Component } from 'react'\nimport logo from '../token-logo.png'\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar nav-fill w-100 navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a href='https://ropsten.etherscan.io/address/0xe0b76e8069f082f446Bc626d5E9Ec4C4c71fC043' \n           className=\"navbar-brand col-sm-3 col-md-2 mr-0\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={logo} width=\"35\" height=\"35\" className=\"d-inline-block align-top\" alt=\"\" />\n          &nbsp; Ace Token Farm\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-light\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div id=\"content\" className=\"mt-3\" style={{paddingTop:\"40px\"}}>\n\n        <table className=\"table table-borderless text-muted text-center\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Staking Balance</th>\n              <th scope=\"col\">Reward Balance</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{window.web3.utils.fromWei(this.props.stakingBalance, 'Ether')} ETH</td>\n              <td>{window.web3.utils.fromWei(this.props.aceTokenBalance, 'Ether')} ACE</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div className=\"card mb-4\">\n\n          <div className=\"card-body\">\n\n            <form className=\"mb-3\" onSubmit={(event) => {\n                event.preventDefault()\n                let amount\n                amount = this.input.value.toString()\n                amount = window.web3.utils.toWei(amount, 'Ether')\n                this.props.stakeTokens(amount)\n              }}>\n              <div>\n                <label className=\"float-left\"><b>Stake Tokens</b></label>\n                <span className=\"float-right text-muted\">\n                  Balance: { parseFloat(this.props.etherBalance).toFixed(4) } ETH\n                </span>\n              </div>\n              <div className=\"input-group mb-4\">\n                <input\n                  type=\"text\"\n                  ref={(input) => { this.input = input }}\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"0\"\n                  required />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\" style={{fontWeight: '500'}}>STAKE</button>\n            </form>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-link btn-block btn-sm\"\n              style={{fontWeight: 'bold', fontSize: '14px'}}\n              onClick={(event) => {\n                event.preventDefault()\n                this.props.unstakeTokens()\n              }}>\n                UNSTAKE\n              </button>\n          </div>\n          <div>\n            <p className=\"h6 text-info\" style={{textAlign: 'center'}}>NB: Reload the page after transaction is confirmed </p>\n            <p className=\"h6 text-danger\" style={{textAlign: 'center', paddingTop: '5px'}}>Please connect to the Ropsten network! </p>\n          </div>\n          <br/>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport AceToken from '../abis/AceToken.json'\nimport TokenFarm from '../abis/TokenFarm.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport './App.css'\n\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n\n  // Detect MetaMask and Connect to current account\n  async loadWeb3() {\n\n    // Check for Metamask\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n\n    //Check for other wallets\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n\n    else {\n      window.alert('No Ethereum wallets detected. You should consider trying MetaMask!')\n    }\n  }\n\n\n  // Loading the Data from Chain\n  async loadBlockchainData() {\n\n    const web3 = window.web3\n    const networkId = await web3.eth.net.getId()\n\n    // Load AceToken\n    const aceTokenData = AceToken.networks[networkId]\n    if(aceTokenData) {\n      const aceToken = new web3.eth.Contract(AceToken.abi, aceTokenData.address)\n      this.setState({ aceToken })\n      let aceTokenBalance = await aceToken.methods.balanceOf(window.ethereum.selectedAddress).call()\n      this.setState({ aceTokenBalance: aceTokenBalance.toString() })\n    } else {\n      window.alert('AceToken contract not deployed to detected network.')\n    }\n\n    // Load TokenFarm\n    const tokenFarmData = TokenFarm.networks[networkId]\n    if(tokenFarmData) {\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\n      this.setState({ tokenFarm })\n      let stakingBalance = await tokenFarm.methods.stakingBalance(window.ethereum.selectedAddress).call()\n      this.setState({ stakingBalance: stakingBalance.toString() })\n    } else {\n      window.alert('TokenFarm contract not deployed to detected network.')\n    }\n\n    // Current Ethereum Balance\n    let etherBalance = await window.web3.eth.getBalance(window.ethereum.selectedAddress)\n    etherBalance = window.web3.utils.fromWei(etherBalance.toString(), 'Ether')\n    this.setState({ etherBalance: etherBalance })\n\n    this.setState({ loading: false })\n  }\n\n\n  // Stake ETH into the Contract\n  stakeTokens = (amount) => {\n    if( amount <= 0 ) {\n      alert(\"Please enter a valid Amount!\");\n    }\n    else {\n      this.setState({ loading: true })\n      this.state.tokenFarm.methods.recieveEther().send({ from: window.ethereum.selectedAddress, value: amount}).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n      \n      // // Sending Transaction Confirmation\n      // let status = null;\n      // while(status == null) {\n      //   status = web3.eth.getTransactionReceipt(hash [, callback]);\n      // }\n\n    }\n  }\n\n\n  // Unstake ETH to user wallet\n  unstakeTokens = () => {\n    this.setState({ loading: true })\n    this.state.tokenFarm.methods.sendEther().send({ from: window.ethereum.selectedAddress }).on('transactionHash', (hash) => {\n      this.setState({ loading: false })\n    })\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      aceToken: {},\n      tokenFarm: {},\n      aceTokenBalance: '0',\n      stakingBalance: '0',\n      etherBalance: '0',\n      loading: true\n    }\n  }\n\n  \n  render() {\n    let content\n    if(this.state.loading) {\n      content = \n      <div>\n        <p id=\"loader\" className=\"h4 text-center text-bold\" style={{paddingTop: '100px'}}>Loading data...</p>\n        <p id=\"loader\" className=\"h5 text-center text-bold text-danger\" style={{paddingTop: '15px'}}>Please reload or check connection to Ropsten network</p>\n        <p id=\"loader\" className=\"h5 text-center text-bold text-danger\">if Metamask doesn't work!</p>\n      </div>\n    } else {\n      content = <Main\n        etherBalance={this.state.etherBalance}\n        aceTokenBalance={this.state.aceTokenBalance}\n        stakingBalance={this.state.stakingBalance}\n        stakeTokens={this.stakeTokens}\n        unstakeTokens={this.unstakeTokens}\n      />\n    }\n\n    return (\n      <div>\n        <Navbar account={window.ethereum.selectedAddress} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\n              <div className=\"content mr-auto ml-auto\">\n\n                {content}\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}